module testb 
(
); 
   
reg [63:0] a; 
reg [63:0] b; 
reg ainvert; 
reg binvert; 
reg carryin; 
reg [1:0] operation; 
wire [64:0] result; 
wire carryout; 
    
ALU_64_Bit ALU_64_1(a,b,ainvert,binvert,carryin,operation,result,carryout); 
   
initial 
begin 
a = 64'b1000101010101010101000000000000011111111111100000010101010101101;   
b = 64'b0111001010101010101010000000000000111111111111000000101010101011; 
ainvert = 1'b0; 
binvert = 1'b0; 
carryin = 1'b0; 
operation = 2'b00;    
operation = 2'b01;     
operation = 2'b10;     
binvert = 1'b1; 
carryin = 1'b1;        
operation = 2'b10;     
binvert = 1'b0; 
ainvert = 1'b1; 
operation = 2'b10;        
end 
    
endmodule 
